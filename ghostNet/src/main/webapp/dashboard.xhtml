<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
xmlns:h="http://xmlns.jcp.org/jsf/html"
xmlns:f="http://xmlns.jcp.org/jsf/core"
xmlns:p="http://primefaces.org/ui"
xmlns:ui="http://java.sun.com/jsf/facelets">

<h:head>
<title>Dashboard</title>
<link rel="stylesheet" type="text/css" href="resources/css/dashboard.css" />
<script src="https://maps.google.com/maps/api/js?key=AIzaSyCvCDkYieuUBmMWon_mfLAfjuaeuosuqow&amp;sensor=false"></script>

</h:head>

<h:body>



<h:form rendered="#{loginController.eingeloggt}" style="display: flex; gap: 2rem; align-items: center; flex-wrap: wrap; position:fixed; justify-content:center; height: 15vh; top:0">
    <h:commandLink action="profilBearbeiten.xhtml?faces-redirect=true" style="border: none; background: none;">
        <p:avatar size="xlarge" shape="circle" styleClass="shadow-4 cursor-pointer">
            <p:graphicImage value="#{loginController.aktuellerNutzer.bild}"
            style="width: 100%; height: 100%; object-fit: cover; border-radius: 50%;" />
        </p:avatar>
    </h:commandLink>
    
    <ui:fragment rendered="#{loginController.aktuellerNutzer.rollenTyp eq 'KEINE'}">
        <h1>Willkommen bei Shea Sepherd #{loginController.aktuellerNutzer.name}!</h1>
    </ui:fragment>
    <ui:fragment rendered="#{loginController.aktuellerNutzer.rollenTyp eq 'MELDEND'}">
        <h1>Beginne mit dem Melden #{loginController.aktuellerNutzer.name}!</h1>
    </ui:fragment>
    <ui:fragment rendered="#{loginController.aktuellerNutzer.rollenTyp eq 'BERGEND'}">
        <h1>Bereit für die Bergung #{loginController.aktuellerNutzer.name}!</h1>
    </ui:fragment>

    <p:button outcome="landingpage" icon="pi pi-info" style="margin:1rem;" />
    <p:commandButton value="Abmelden" 
                     icon="pi pi-sign-out" 
                     action="#{loginController.logout}" 
                     styleClass="p-button-secondary"
                     style="margin:1rem;"
                     title="Ausloggen" />
</h:form>

<h:form rendered="#{loginController.nichtEingeloggt}" style="display: flex; flex-direction: column; gap: 2rem; align-items: center; justify-content: center; height: 100vh; text-align: center;">
    <h1>Bitte melden Sie sich an</h1>
    <p style="font-size: 1.2rem; color: #666;">Sie müssen sich zuerst anmelden, um das Dashboard zu verwenden.</p>
    <p:button outcome="login" 
              value="Zur Anmeldung" 
              icon="pi pi-sign-in" 
              styleClass="p-button-lg p-button-primary"
              style="margin:1rem; padding: 1rem 2rem;" />
</h:form>
<h:panelGroup rendered="#{loginController.eingeloggt}">
    <h:form>
        <!-- Google Map -->
        <p:gmap id="geisternetzMap"
                center="20.0,0.0"
                zoom="2"
                type="HYBRID"
                model="#{geisternetzMapView.geisternetzModel}"
                style="width:100vw;height:70vh"
                widgetVar="gmap">
            <p:ajax event="overlaySelect"
                    listener="#{geisternetzMapView.onMarkerSelect}"
                    update="geisternetzInfoDialog"
                    oncomplete="#{loginController.aktuellerNutzer.rollenTyp eq 'BERGEND' ? bergungsController.setAktuellesGeisternetz(geisternetzMapView.selectedGeisternetz) : ''}; PF('infoDialog').show()" />
        </p:gmap>

        <p:dialog header="#{loginController.aktuellerNutzer.rollenTyp eq 'BERGEND' ? 'Geisternetz-Bergung' : 'Geisternetz-Information'}"
                  widgetVar="infoDialog"
                  id="geisternetzInfoDialog"
                  modal="true"
                  closable="true"
                  draggable="false"
                  resizable="false"
                  width="#{loginController.aktuellerNutzer.rollenTyp eq 'BERGEND' ? '500' : '350'}"
                  style="max-height: 80vh; overflow-y: auto;">
            <h:outputText value="#{geisternetzMapView.selectedMarker.data}" escape="false" />

            <!-- Verschollen melden -->
            <h:panelGroup rendered="#{geisternetzMapView.selectedGeisternetz.netzStatus ne 'VERSCHOLLEN'
                                      and geisternetzMapView.selectedGeisternetz.netzStatus ne 'GEBORGEN'}">
                <h:outputText rendered="#{empty loginController.aktuellerNutzer.telefonnummer}"
                              value="⚠ Um ein Geisternetz als verschollen zu melden, fügen Sie bitte Ihre Telefonnummer im Profil hinzu."
                              style="color: #f57c00; font-size: 0.9rem; display:block; margin-bottom: 0.5rem;" />
                <p:commandButton id="verschollenBtn"
                                 value="Als verschollen melden"
                                 icon="pi pi-exclamation-triangle"
                                 action="#{verschollenController.verschollenMelden(geisternetzMapView.selectedGeisternetz)}"
                                 styleClass="p-button-warning"
                                 style="margin-top:1rem;"
                                 update="geisternetzInfoDialog geisternetzMap :filterForm"
                                 onclick="return confirm('Möchten Sie dieses Geisternetz wirklich als verschollen melden?')"
                                 disabled="#{empty loginController.aktuellerNutzer.telefonnummer}"
                                 immediate="true" />
            </h:panelGroup>

            <h:panelGroup rendered="#{loginController.aktuellerNutzer.rollenTyp eq 'BERGEND'}">
                <h4>Bergungsaktionen</h4>
        
        <h:panelGroup rendered="#{bergungsController.kannFuerBergungAnmelden()}">
            <p:fieldset legend="Für Bergung anmelden" style="margin-bottom: 1rem;">
                <h:panelGrid columns="2" cellpadding="8" style="width: 100%;">
                    <p:outputLabel for="geplanteDatum" value="Geplantes Bergungsdatum:" />
                    <p:calendar id="geplanteDatum" 
                               value="#{bergungsController.geplanteBergung}" 
                               pattern="dd.MM.yyyy"
                               showTime="true"
                               required="true"
                               showOn="button"
                               requiredMessage="Bitte geben Sie ein geplantes Datum an."
                               style="width: 100%;"/>
                </h:panelGrid>
                
                <div style="margin-top: 1rem; padding-top: 1rem; border-top: 1px solid #dee2e6;">
                    <p style="color: #6c757d; font-size: 0.9rem; margin-bottom: 1rem;">
                        <i class="pi pi-info-circle"></i> 
                        Nach der Anmeldung können Sie die Bergung durchführen und abschließen.
                    </p>
                </div>
                
                <div class="bergung-buttons">
                    <p:commandButton value="Für Bergung anmelden" 
                                   action="#{bergungsController.fuerBergungAnmelden()}"
                                   icon="pi pi-calendar-plus"
                                   styleClass="p-button-success"
                                   update="@all"
                                   onclick="return confirm('Möchten Sie sich für diese Bergung anmelden?')" 
                                   oncomplete="if (!args.validationFailed) window.location.reload();"/>
                </div>
            </p:fieldset>
        </h:panelGroup>

        <h:panelGroup rendered="#{bergungsController.kannBergungAbgeschlossenWerden()}">
            <p:fieldset legend="Bergung abschließen" 
                       styleClass="status-wirdgeborgen"
                       style="margin-bottom: 1rem;">
                
                <p:panel styleClass="ui-panel-content">
                    <p style="margin-bottom: 1rem;">
                        <strong>Geplantes Datum:</strong> 
                        <span style="color: #3498db;">
                            #{geisternetzListe.getFormatiertesGeplanteDatum(bergungsController.aktuellesGeisternetz)}
                        </span>
                    </p>
                    <p style="margin-bottom: 1rem;">
                        <strong>Berger:</strong> 
                       <h:outputText value="#{geisternetzListe.getErstenBerger(bergungsController.aktuellesGeisternetz).name}" />
                    </p>
                    <p style="color: #6c757d; font-size: 0.9rem; margin-bottom: 0;">
                        <i class="pi pi-clock"></i> 
                        Bergung in Bearbeitung - bitte nach Abschluss als beendet markieren.
                    </p>
                </p:panel>
                
                <div class="bergung-buttons">
                    <p:commandButton value="Bergung abschließen" 
                                   action="#{bergungsController.bergungAbschliessen()}"
                                   icon="pi pi-check"
                                   styleClass="p-button-success"
						 		   update="geisternetzInfoDialog geisternetzMap"
                                   onclick="return confirm('Möchten Sie diese Bergung als erfolgreich abgeschlossen markieren?')" 
                                   oncomplete="if (!args.validationFailed) window.location.reload();"/>
                    
                    <p:commandButton value="Bergung abbrechen" 
                                   action="#{bergungsController.bergungAbbrechen()}"
                                   icon="pi pi-times"
                                   styleClass="p-button-danger"
						 		   update="geisternetzInfoDialog geisternetzMap"
                                   onclick="return confirm('Möchten Sie diese Bergung wirklich abbrechen? Das Geisternetz wird wieder als \\'gemeldet\\' markiert.')" />
                </div>
            </p:fieldset>
        </h:panelGroup>

        <h:panelGroup rendered="#{bergungsController.aktuellesGeisternetz != null and bergungsController.aktuellesGeisternetz.netzStatus.name() eq 'GEBORGEN'}">
            <p:fieldset legend="Bergung abgeschlossen" styleClass="status-geborgen">
                <div class="success-message">
                    <i class="pi pi-check-circle"></i> 
                    Dieses Geisternetz wurde bereits erfolgreich geborgen.
                </div>
                
                <p:panel style="margin-top: 1rem;">
                    <p style="margin-bottom: 0.5rem;">
                        <strong>Bergungsdatum:</strong> 
                        <span style="color: #27ae60;">
                            #{geisternetzListe.getFormatiertesTatsaechlichesDatum(bergungsController.aktuellesGeisternetz)}
                        </span>
                    </p>
                    <p style="margin-bottom: 0;">
                        <strong>Berger:</strong> 
                      <h:outputText value="#{geisternetzListe.getErstenBerger(bergungsController.aktuellesGeisternetz).name}" />
                    </p>
                </p:panel>
            </p:fieldset>
        </h:panelGroup>

        <h:panelGroup rendered="#{!bergungsController.kannFuerBergungAnmelden() and !bergungsController.kannBergungAbgeschlossenWerden() and (bergungsController.aktuellesGeisternetz == null or bergungsController.aktuellesGeisternetz.netzStatus.name() ne 'GEBORGEN')}">
            <p:fieldset legend="Keine Aktionen verfügbar">
                <p style="color: #6c757d; text-align: center; margin: 1rem 0;">
                    <i class="pi pi-info-circle"></i> 
                    Für dieses Geisternetz sind aktuell keine Bergungsaktionen möglich.
                </p>
            </p:fieldset>
        </h:panelGroup>
            </h:panelGroup>
        </p:dialog>

        <div style="display: flex; gap: 2vw; align-items: center; flex-wrap: wrap; justify-content: center; height: 5vh; width: 100vw; bottom: 0;">
            <p:selectBooleanCheckbox id="cbGemeldet" value="#{geisternetzMapView.showGemeldet}">
                <p:ajax event="change" listener="#{geisternetzMapView.updateFilter}" update="geisternetzMap" />
            </p:selectBooleanCheckbox>
            <h:outputLabel for="cbGemeldet" value="Gemeldet" />

            <p:selectBooleanCheckbox id="cbBergung" value="#{geisternetzMapView.showBergungbevorstehend}">
                <p:ajax event="change" listener="#{geisternetzMapView.updateFilter}" update="geisternetzMap" />
            </p:selectBooleanCheckbox>
            <h:outputLabel for="cbBergung" value="Bergung bevorstehend" />

            <p:selectBooleanCheckbox id="cbGeborgen" value="#{geisternetzMapView.showGeborgen}">
                <p:ajax event="change" listener="#{geisternetzMapView.updateFilter}" update="geisternetzMap" />
            </p:selectBooleanCheckbox>
            <h:outputLabel for="cbGeborgen" value="Geborgen" />

            <p:selectBooleanCheckbox id="cbVerschollen" value="#{geisternetzMapView.showVerschollen}">
                <p:ajax event="change" listener="#{geisternetzMapView.updateFilter}" update="geisternetzMap" />
            </p:selectBooleanCheckbox>
            <h:outputLabel for="cbVerschollen" value="Verschollen" />
        </div>

        <div style="display: flex; gap: 20vw; align-items: center; flex-wrap: wrap; position:fixed; justify-content:center; height: 15vh; width: 100vw; bottom:0">
            <ui:fragment rendered="#{loginController.aktuellerNutzer.rollenTyp eq 'KEINE'}">
                <p:button outcome="meldenInfo" value="Meldende Person werden" />
                <p:button outcome="bergenInfo" value="Bergende Person werden" />
            </ui:fragment>
            <ui:fragment rendered="#{loginController.aktuellerNutzer.rollenTyp eq 'MELDEND'}">
                <p:button outcome="melden" value="Geisternetz melden" />
                <p:button outcome="bergenInfo" value="Bergende Person werden" />
            </ui:fragment>
             <ui:fragment rendered="#{loginController.aktuellerNutzer.rollenTyp eq 'BERGEND'}">
                 <p:button outcome="melden" value="Geisternetz melden" />
           		 <p:button outcome="bergen" value="Bergungsübersicht" />
            </ui:fragment>
        </div>
    </h:form>
</h:panelGroup>


</h:body>
</html>